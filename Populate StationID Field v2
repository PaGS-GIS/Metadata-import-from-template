//Code returns -unknown. It should be using the value from the Creator field and populating the StationID field from that value

// Get the quadrangle layer and the intersecting quadrangle for the point
var quads = FeatureSetByName($map, 'QuadIndex', ['cell_name']);
var quad = First(Intersects($feature, quads));

// Initialize quadID and check if the quadrangle is found
var quadID = "";
if (!IsEmpty(quad)) {
    // Extract the first 3 letters of the quadrangle cell name
    quadID = Upper(Left(quad['cell_name'], 3));
}

// Determine the next sequential number
var layer = FeatureSetByName($map, "PointLayer", ["StationID"]); // Replace "PointLayer" with your actual layer name
var maxNumber = 0;

for (var f in layer) {
    // Extract the StationID and check the numeric part
    var existingID = f["StationID"];
    if (!IsEmpty(existingID)) {
        // Ensure the StationID starts with the same quadID
        if (Left(existingID, 3) == quadID) {
            // Extract the numeric part after the quadID
            var numericPart = Number(Text(existingID).Substring(3)); // Extract digits after the quadID
            if (!IsNaN(numericPart) && numericPart > maxNumber) {
                maxNumber = numericPart;
            }
        }
    }
}

// The next sequential number
var seqNumber = maxNumber + 1;

// Retrieve and clean the Creator field
var creator = Trim(Lower($feature.Creator)); // Convert to lowercase and remove spaces
var suffix = "";

// Mapping of Creator email to their respective suffixes
var userMap = {
    "morgbaker@pa.gov_DCNR": "-morgbaker",
    "chrisoest@pa.gov": "-chrisoest",
    "janedoe@pa.gov": "-janedoe",
    "johndoe@pa.gov": "-johndoe"
};

// Assign the predefined suffix if the creator exists in the mapping
if (HasKey(userMap, creator)) {
    suffix = userMap[creator];
} else {
    suffix = "-unknown"; // Default value for unmatched creators (optional)
}

// Combine parts for the final StationID: QUAD + SeqNumber + Predefined Suffix
var stationID = Concatenate([quadID, seqNumber, suffix]);

// Return the result if StationID is empty
if (IsEmpty($feature.StationID)) {
    return stationID;
} else {
    return $feature.StationID;  // Return existing StationID if already filled
}
