//This code doesn't fully function yet. It is supposed to return the first three letter of the quad the point feature is in, then a sequential number, and then the user name. Currently it doesn't return a sequential number. The number is always 1.

// Get the quadrangle layer and the intersecting quadrangle for the point
var quads = FeatureSetByName($map, 'QuadIndex', ['cell_name']);
var quad = First(Intersects($feature, quads));

// Initialize quadID and check if the quadrangle is found
var quadID = "";
if (!IsEmpty(quad)) {
    // Extract the first 3 letters of the quadrangle cell name
    quadID = Upper(Left(quad['cell_name'], 3));
}

// Determine the next sequential number
var layer = FeatureSetByName($map, "PointLayer", ["StationID"]); // Replace with actual layer name
var maxNumber = 0;

for (var f in layer) {
    var existingID = f["StationID"];
    if (!IsEmpty(existingID) && Left(existingID, 3) == quadID) {
        // Extract numeric portion (handles cases where suffix may exist)
        var numPart = Text(existingID).Replace("[^0-9]", ""); // Extract only numbers
        var numericPart = Number(numPart);
        if (!IsNaN(numericPart) && numericPart > maxNumber) {
            maxNumber = numericPart;
        }
    }
}

// The next sequential number
var seqNumber = maxNumber + 1;

// Construct the base StationID (without suffix)
var stationID = Concatenate([quadID, seqNumber]);

// Retrieve the current signed-in ArcGIS username
var userInfo = GetUser();
var currentUser = Lower(userInfo.username); // Use `username` field

// Mapping of ArcGIS usernames to their respective suffixes
var userMap = {
    "morgbaker@pa.gov_dcnr": "-mcb",
    "chrisoest@pa.gov": "-chrisoest",
    "janedoe@pa.gov": "-janedoe",
    "johndoe@pa.gov": "-johndoe"
};

// Check if StationID already contains a known suffix
var hasSuffix = False;
for (var key in userMap) {
    if (Find(userMap[key], stationID) > -1) {
        hasSuffix = True;
        break;
    }
}

// Append suffix **ONLY IF** it's missing
if (!hasSuffix && HasKey(userMap, currentUser)) {
    stationID = Concatenate([stationID, userMap[currentUser]]);
}

// Return StationID only if it's not already set
if (IsEmpty($feature.StationID)) {
    return stationID;
} else {
    return $feature.StationID;  // Keep existing StationID
}
