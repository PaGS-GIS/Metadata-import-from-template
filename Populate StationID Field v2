//This code appears ot work propperly until it is used in the Field Map map. This verson of the code requires a field titled temp. The temp field will populate with the user's name, seperated at the @.

// Get the quadrangle layer and the intersecting quadrangle for the point
var quads = FeatureSetByName($map, 'QuadIndex', ['cell_name']);
var quad = First(Intersects($feature, quads));

// Initialize quadID and check if the quadrangle is found
var quadID = "";
if (!IsEmpty(quad)) {
    // Extract the first 3 letters of the quadrangle cell name
    quadID = Upper(Left(quad['cell_name'], 3));
}

// Determine the next sequential number
var layer = FeatureSetByName($map, "PointLayer", ["StationID"]); // Replace "PointLayer" with your actual layer name
var maxNumber = 0;

for (var f in layer) {
    // Extract the StationID and check the numeric part
    var existingID = f["StationID"];
    if (!IsEmpty(existingID)) {
        // Ensure the StationID starts with the same quadID
        if (Left(existingID, 3) == quadID) {
            // Extract the numeric part after the quadID
            var numericPart = Number(Text(existingID).Substring(3)); // Extract digits after the quadID
            if (!IsNaN(numericPart) && numericPart > maxNumber) {
                maxNumber = numericPart;
            }
        }
    }
}

// The next sequential number
var seqNumber = maxNumber + 1;

// Extract username from the 'Creator' field (before the @ symbol) and prepend a dash
var username = $feature.Creator;
var usernamePrefix = "";
if (!IsEmpty(username)) {
    var usernameParts = Split(username, "@");
    usernamePrefix = "-" + usernameParts[0];  // Add a dash before the username
}

// Get the value from the 'temp' field
var tempValue = $feature.temp;
if (IsEmpty(tempValue)) {
    tempValue = "";  // Ensure it doesn't break concatenation if empty
}

// Combine parts for the final StationID: QUAD + SeqNumber + Temp + Username
var stationID = Concatenate([quadID, seqNumber, tempValue, usernamePrefix]);

// Return the result if StationID is empty
if (IsEmpty($feature.StationID)) {
    return stationID;
} else {
    return $feature.StationID;  // Return existing StationID if already filled
}
